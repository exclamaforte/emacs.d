0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', '-g', 'swank-js' ]
2 info using npm@1.2.18
3 info using node@v0.10.15
4 verbose read json /usr/local/lib/package.json
5 verbose read json /usr/local/lib/package.json
6 verbose cache add [ 'swank-js', null ]
7 verbose cache add name=undefined spec="swank-js" args=["swank-js",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'swank-js',
8 verbose parsed url   path: 'swank-js',
8 verbose parsed url   href: 'swank-js' }
9 silly lockFile d4a4c2e2-swank-js swank-js
10 verbose lock swank-js /home/gabe/.npm/d4a4c2e2-swank-js.lock
11 verbose read json swank-js/package.json
12 verbose tar pack [ '/home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz',
12 verbose tar pack   'swank-js' ]
13 verbose tarball /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
14 verbose folder swank-js
15 info prepublish swank-js@0.0.5
16 silly lockFile d4a4c2e2-swank-js swank-js
17 verbose lock swank-js /home/gabe/.npm/d4a4c2e2-swank-js.lock
18 silly lockFile 298cc932-84361-0-6010249170940369-tmp-tgz /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
19 verbose lock /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz /home/gabe/.npm/298cc932-84361-0-6010249170940369-tmp-tgz.lock
20 silly lockFile d4a4c2e2-swank-js swank-js
21 silly lockFile d4a4c2e2-swank-js swank-js
22 silly lockFile 298cc932-84361-0-6010249170940369-tmp-tgz /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
23 silly lockFile 298cc932-84361-0-6010249170940369-tmp-tgz /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
24 verbose tar unpack /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
25 silly lockFile a50d5e99-84361-0-6010249170940369-package /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
26 verbose lock /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package /home/gabe/.npm/a50d5e99-84361-0-6010249170940369-package.lock
27 silly lockFile 298cc932-84361-0-6010249170940369-tmp-tgz /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
28 verbose lock /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz /home/gabe/.npm/298cc932-84361-0-6010249170940369-tmp-tgz.lock
29 silly gunzTarPerm modes [ '755', '644' ]
30 silly gunzTarPerm extractEntry package.json
31 silly gunzTarPerm extractEntry .npmignore
32 silly gunzTarPerm extractEntry README.md
33 silly gunzTarPerm extractEntry LICENSE
34 silly gunzTarPerm extractEntry completion.js
35 silly gunzTarPerm extractEntry config.js
36 silly gunzTarPerm extractEntry completion-tests.js
37 silly gunzTarPerm extractEntry swank.js
38 silly gunzTarPerm extractEntry user-agent-tests.js
39 silly gunzTarPerm extractEntry swank-protocol.js
40 silly gunzTarPerm extractEntry swank-handler-tests.js
41 silly gunzTarPerm extractEntry swank-handler.js
42 silly gunzTarPerm extractEntry swank-protocol-tests.js
43 silly gunzTarPerm extractEntry lisp-tests.js
44 silly gunzTarPerm extractEntry user-agent.js
45 silly gunzTarPerm extractEntry lisp.js
46 silly gunzTarPerm extractEntry slime-js.el
47 silly gunzTarPerm extractEntry History.md
48 silly gunzTarPerm extractEntry client/browser-tests.js
49 silly gunzTarPerm extractEntry client/json2.js
50 silly gunzTarPerm extractEntry client/load.js
51 silly gunzTarPerm extractEntry client/node.js
52 silly gunzTarPerm extractEntry client/stacktrace.js
53 silly gunzTarPerm extractEntry client/swank-js-inject.js
54 silly gunzTarPerm extractEntry client/swank-js.js
55 silly gunzTarPerm extractEntry client/test.html
56 verbose read json /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package/package.json
57 silly lockFile a50d5e99-84361-0-6010249170940369-package /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
58 silly lockFile a50d5e99-84361-0-6010249170940369-package /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
59 silly lockFile 298cc932-84361-0-6010249170940369-tmp-tgz /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
60 silly lockFile 298cc932-84361-0-6010249170940369-tmp-tgz /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/tmp.tgz
61 verbose from cache /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package/package.json
62 verbose tar pack [ '/home/gabe/.npm/swank-js/0.0.5/package.tgz',
62 verbose tar pack   '/home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package' ]
63 verbose tarball /home/gabe/.npm/swank-js/0.0.5/package.tgz
64 verbose folder /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
65 silly lockFile a50d5e99-84361-0-6010249170940369-package /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
66 verbose lock /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package /home/gabe/.npm/a50d5e99-84361-0-6010249170940369-package.lock
67 silly lockFile 222e9dbc-e-npm-swank-js-0-0-5-package-tgz /home/gabe/.npm/swank-js/0.0.5/package.tgz
68 verbose lock /home/gabe/.npm/swank-js/0.0.5/package.tgz /home/gabe/.npm/222e9dbc-e-npm-swank-js-0-0-5-package-tgz.lock
69 silly lockFile a50d5e99-84361-0-6010249170940369-package /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
70 silly lockFile a50d5e99-84361-0-6010249170940369-package /home/gabe/tmp/npm-15661/1416696184361-0.6010249170940369/package
71 silly lockFile 222e9dbc-e-npm-swank-js-0-0-5-package-tgz /home/gabe/.npm/swank-js/0.0.5/package.tgz
72 silly lockFile 222e9dbc-e-npm-swank-js-0-0-5-package-tgz /home/gabe/.npm/swank-js/0.0.5/package.tgz
73 silly lockFile c98ae941--gabe-npm-swank-js-0-0-5-package /home/gabe/.npm/swank-js/0.0.5/package
74 verbose lock /home/gabe/.npm/swank-js/0.0.5/package /home/gabe/.npm/c98ae941--gabe-npm-swank-js-0-0-5-package.lock
75 silly lockFile c98ae941--gabe-npm-swank-js-0-0-5-package /home/gabe/.npm/swank-js/0.0.5/package
76 silly lockFile c98ae941--gabe-npm-swank-js-0-0-5-package /home/gabe/.npm/swank-js/0.0.5/package
77 verbose tar unpack /home/gabe/.npm/swank-js/0.0.5/package.tgz
78 silly lockFile c98ae941--gabe-npm-swank-js-0-0-5-package /home/gabe/.npm/swank-js/0.0.5/package
79 verbose lock /home/gabe/.npm/swank-js/0.0.5/package /home/gabe/.npm/c98ae941--gabe-npm-swank-js-0-0-5-package.lock
80 silly lockFile 222e9dbc-e-npm-swank-js-0-0-5-package-tgz /home/gabe/.npm/swank-js/0.0.5/package.tgz
81 verbose lock /home/gabe/.npm/swank-js/0.0.5/package.tgz /home/gabe/.npm/222e9dbc-e-npm-swank-js-0-0-5-package-tgz.lock
82 silly gunzTarPerm modes [ '755', '644' ]
83 silly gunzTarPerm extractEntry package.json
84 silly gunzTarPerm extractEntry .npmignore
85 silly gunzTarPerm extractEntry README.md
86 silly gunzTarPerm extractEntry LICENSE
87 silly gunzTarPerm extractEntry completion.js
88 silly gunzTarPerm extractEntry config.js
89 silly gunzTarPerm extractEntry completion-tests.js
90 silly gunzTarPerm extractEntry swank.js
91 silly gunzTarPerm extractEntry user-agent-tests.js
92 silly gunzTarPerm extractEntry swank-protocol.js
93 silly gunzTarPerm extractEntry swank-handler-tests.js
94 silly gunzTarPerm extractEntry swank-handler.js
95 silly gunzTarPerm extractEntry swank-protocol-tests.js
96 silly gunzTarPerm extractEntry lisp-tests.js
97 silly gunzTarPerm extractEntry user-agent.js
98 silly gunzTarPerm extractEntry lisp.js
99 silly gunzTarPerm extractEntry slime-js.el
100 silly gunzTarPerm extractEntry History.md
101 silly gunzTarPerm extractEntry client/browser-tests.js
102 silly gunzTarPerm extractEntry client/json2.js
103 silly gunzTarPerm extractEntry client/load.js
104 silly gunzTarPerm extractEntry client/node.js
105 silly gunzTarPerm extractEntry client/stacktrace.js
106 silly gunzTarPerm extractEntry client/swank-js-inject.js
107 silly gunzTarPerm extractEntry client/swank-js.js
108 silly gunzTarPerm extractEntry client/test.html
109 verbose read json /home/gabe/.npm/swank-js/0.0.5/package/package.json
110 silly lockFile c98ae941--gabe-npm-swank-js-0-0-5-package /home/gabe/.npm/swank-js/0.0.5/package
111 silly lockFile c98ae941--gabe-npm-swank-js-0-0-5-package /home/gabe/.npm/swank-js/0.0.5/package
112 silly lockFile 222e9dbc-e-npm-swank-js-0-0-5-package-tgz /home/gabe/.npm/swank-js/0.0.5/package.tgz
113 silly lockFile 222e9dbc-e-npm-swank-js-0-0-5-package-tgz /home/gabe/.npm/swank-js/0.0.5/package.tgz
114 silly shasum updated bytes 47897
115 info shasum 21071d1771aba23becdea5bca8d7d2b65168b458
115 info shasum /home/gabe/.npm/swank-js/0.0.5/package.tgz
116 verbose from cache /home/gabe/.npm/swank-js/0.0.5/package/package.json
117 verbose chmod /home/gabe/.npm/swank-js/0.0.5/package.tgz 644
118 verbose chown /home/gabe/.npm/swank-js/0.0.5/package.tgz [ 1000, 1000 ]
119 silly lockFile d4a4c2e2-swank-js swank-js
120 silly resolved [ { name: 'swank-js',
120 silly resolved     version: '0.0.5',
120 silly resolved     description: 'Swank backend for Node.JS and in-browser JavaScript.',
120 silly resolved     keywords: [ 'swank', 'slime', 'emacs', 'repl' ],
120 silly resolved     author: { name: 'Ivan Shvedunov' },
120 silly resolved     contributors: [ [Object], [Object], [Object] ],
120 silly resolved     homepage: 'https://github.com/swank-js/swank-js',
120 silly resolved     repository:
120 silly resolved      { type: 'git',
120 silly resolved        url: 'https://github.com/swank-js/swank-js.git',
120 silly resolved        web: 'https://github.com/swank-js/swank-js' },
120 silly resolved     bugs: { url: 'https://github.com/swank-js/swank-js/issues/' },
120 silly resolved     main: './swank.js',
120 silly resolved     bin: { 'swank-js': './swank.js' },
120 silly resolved     dependencies: { 'socket.io': '>=0.9', 'socket.io-client': '>=0.9' },
120 silly resolved     scripts: { swank: 'node ./swank.js' },
120 silly resolved     licenses: [ [Object] ],
120 silly resolved     readme: 'swank-js\n========\n\nNOTE: the official repo is at <https://github.com/swank-js/swank-js>.\n\nswank-js provides [SLIME](http://common-lisp.net/project/slime/) REPL\nand other development tools for in-browser JavaScript and\n[Node.JS](http://nodejs.org). It consists of SWANK backend and\naccompanying SLIME contrib. [Socket.IO](http://socket.io/) is used to\ncommunicate with wide range of web browsers.\n\nRequest for Contributors\n------------------------\n\nA lot of the contributors of this project are strapped for time, and \nwe could use some more. \n\nPlease see: https://github.com/swank-js/swank-js/issues/52\n\nMotivation\n----------\n\nFrom my experience an ability to use REPL for JavaScript debugging and\ninteractive development is very helpful when developing Web\napplications. Previously I was using a heavily patched\n[MozRepl](https://github.com/bard/mozrepl/wiki/) version that was\nadapted for in-browser JavaScript. Primary downsides of that approach\nwere extreme instability of communication between Emacs and the\nbrowser, the lack of cross-browser support and the lack of good RPC\nbetween Emacs and JS that can be used to develop some handy\nextensions.\n\nI knew there exists [slime-proxy](https://github.com/3b/slime-proxy)\nproject that provides such functionality for\n[Parenscript](http://common-lisp.net/project/parenscript/). The\nproblem is that most of us including myself can\'t use Lisp all the\ntime and a lot of code needs to be developed using languages like\nplain JavaScript (as opposed to Parenscript), Python and so on. My\nfirst thought was to adapt slime-proxy for use with plain JS, but then\nI decided to roll my own SWANK backend using Node.JS. I wanted to find\nout what this buzz around Node.JS is about and perhaps steal an\nidea or two from there for use in my Lisp projects. Another reason was\navailability of [Socket.IO](http://socket.io/) and an example of\n[tiny http server proxy](http://www.catonmat.net/http-proxy-in-nodejs).\n\nSome people may prefer Firebug or built-in browser development tools\nto Emacs-based development, but for example in case of mobile browsers\nyou don\'t have much choice. At some point I did try swank-js with an\ncolleague\'s iPhone and it worked, which is not too unexpected given\nthat Socket.IO has good cross-browser support.\n\nStatus\n------\n\nAs of now swank-js provides REPL with an ability to work with multiple\nbrowser connections, supports dynamic updates of JavaScript code using\nC-c C-c / C-M-x, provides debug output function and an ability to\nreload web pages in the browser or refresh their CSS using Emacs\ncommands.\n\nMany aspects of full-fledged SWANK backends aren\'t implemented yet,\nthere\'s no debugger/completion/autodoc and so on, but as I plan to use\nswank-js a lot in future there\'s a good chance many of these features\nwill be eventually added.\n\nInstallation\n------------\n\n1. Install [Node.JS](http://nodejs.org) and [npm](http://npmjs.org/)\n\n2. Install swank-js from npm:\n\n        npm install -g swank-js\n\n3. Get recent [SLIME](http://common-lisp.net/project/slime/) from its CVS\nor the [git mirror](https://github.com/antifuchs/slime.git). The backend\nwas verified to work with SLIME 2012-02-12, it may or may not work with\nother versions, but note that breaking change in the protocol was introduced\nin SLIME 2011-11-27.\n\n4. Make sure you have latest [js2-mode](http://code.google.com/p/js2-mode/).\nAdd it to your .emacs:\n\n        (add-to-list \'load-path "/path/to/js2-mode/directory")\n        (autoload \'js2-mode "js2-mode" nil t)\n        (add-to-list \'auto-mode-alist \'("\\\\.js$" . js2-mode))\n\n5. Create symbolic link to slime-js.el in the contrib subdirectory of\nSLIME project.\n\n6. Install [js2-mode](http://code.google.com/p/js2-mode/) into emacs from\n   http://tromey.com/elpa/\n\n7. In your .emacs, add the following lines (you may use other key for\nslime-js-reload; also, if you\'re already using SLIME, just add slime-js\nto the list of contribs, otherwise adjust the load-path item):\n\n        (global-set-key [f5] \'slime-js-reload)\n        (add-hook \'js2-mode-hook\n                  (lambda ()\n                    (slime-js-minor-mode 1)))\n\n8. If you\'re using CSS mode, you may want to add the following lines too:\n\n        (add-hook \'css-mode-hook\n                  (lambda ()\n                    (define-key css-mode-map "\\M-\\C-x" \'slime-js-refresh-css)\n                    (define-key css-mode-map "\\C-c\\C-r" \'slime-js-embed-css)))\n\nUsage\n-----\n\nIf you want to use swank from the node project just add following to your\npackage.json file:\n\n      { \n       \t "devDependencies": {\n         "swank-js": ">=0.0.1"\n        },\n          "scripts": {\n          "swank": "node node_modules/swank-js"\n        }\n      }\n\nOnce this is done you should be able to run up a swank for this project by\nrunning:\n\n        npm run swank\n\nAlternatively you can install swank-js globally by running:\n\n        npm install -g swank-js\n\nOnce installed you could run it from you project directory:\n\n        swank-js\n\nMake SLIME connect to the backend using `M-x slime-connect` and\nspecifying `localhost` and port `4005`. You will see REPL buffer\nwith the following prompt:\n\n    NODE>\n\nThis means that you\'re currently talking to Node.JS. You may play\naround with it by running some JavaScript expressions.\n\nIf you get warning about SLIME version mismatch, you may make it\ndisappear until the next SLIME upgrade by typing *,js-slime-version*\nat the REPL and entering your SLIME version (e.g. 2010-11-13).\n\n### Connecting to a web browser ###\n\nPoint your web browser to\n\n    http://localhost:8009/swank-js/test.html\nYou will see the following message appear in the REPL (browser name\nand version may differ):\n\n    Remote attached: (browser) Firefox3.6:127.0.0.1\n\nThis means that the browser is now connected. Several browsers can\nconnect simultaneously and you can switch between them and Node.JS\nREPL using *,select-remote* REPL shortcut. To use it, press \',\'\n(comma) and type *select-remote* (completion is supported). You will\nsee "Remote:" prompt. Press TAB to see completions. Select your\nbrowser in the list by typing its name or clicking on the\ncompletion. The following message will appear:\n\n    NODE>\n    Remote selected: (browser) Firefox3.6:127.0.0.1\n    FIREFOX-3.6>\n\nAfter that, you can interactively evaluate expressions in your\nbrowser. To go back to Node.JS repl, switch back to node.js/direct\nremote.\n\n    FIREFOX-3.6> document.body.nodeName\n    BODY\n    FIREFOX-3.6> alert("test!")\n    FIREFOX-3.6>\n\nWhen working with browser, you may use F5 to reload the page. swank-js\nconnection with browser is lost in this case, but to solve this\nproblem you may use *,sticky-select-remote* instead of\n*,select-remote*. This way swank-js will remember your selection and\nautomagically attach to the browser whenever it connects. If you press\nF5 after using *,sticky-select-remote*, you will see that browser\nbriefly disconnects but then connects again:\n\n    Remote detached: (browser) Firefox3.6:127.0.0.1\n    FIREFOX-3.6>\n    Remote selected (auto): (direct) node.js\n    Remote attached: (browser) Firefox3.6:127.0.0.1\n    NODE>\n    Remote selected (auto): (browser) Firefox3.6:127.0.0.1\n    FIREFOX-3.6>\n\nThe sticky remote selection is saved in the config file, ~/.swankjsrc,\nso you don\'t need to do *,sticky-select-remote* after restarting the\nbrowser.\n\n\n### Connecting to a remote page ###\n\nNow, let\'s try to make it work with an actual site. swank-js acts as a\nproxy between your browser and the site so it can inject necessary\nscript tags into HTML pages and avoid cross-domain HTTP request\nproblems. Let\'s point it to [reddit](http://www.reddit.com). Type\n*,target-url* and then *http://www.reddit.com* (www. part is\nimportant, otherwise it will redirect to www.reddit.com skipping the\nproxy). Point your browser to http://localhost:8009, you\'ll see reddit\nfrontpage load. If you didn\'t do *,select-remote* or\n*,sticky-select-remote* yet do it now and select your browser from the\nlist of remotes. Now you can execute JavaScript in the context of\nreddit:\n\n    FIREFOX-3.6> $(".sitetable a.title").map(function(n) { return (n + 1) + ". " + $(this).text(); }).get().join("\\n")\n    1. Wikileaks currently under a mass DDOS attack\n    2. Munich University - Jealous\n    ...\n\nLet\'s make a function from it. Create a file test.js somewhere and\nmake sure it uses js2-mode (if it doesn\'t, switch it to js2-mode using\nM-x js2-mode). Type the following there:\n\n    function listRedditTitles () {\n      $(".sitetable a.title").map(\n        function (n) {\n          SwankJS.output((n + 1) + ". " + $(this).text() + "\\n");\n        }).get().join("\\n");\n    }\n\nNote SwankJS.output() function being used there. It allows you to send\ndebug print to SLIME REPL.\n\nMove the point somewhere into the middle of the listRedditTitles() function\nand press C-M-x. Now you may try it out in the REPL:\n\n    FIREFOX-3.6> listRedditTitles()\n    1. Wikileaks currently under a mass DDOS attack\n    2. Munich University - Jealous\n    ...\n\nYou may edit the function definition and update it using C-M-x any\nnumber of times.\n\n\n### Hacking CSS ###\n\n#### By updating a file ####\n\nNow let\'s try some CSS hacking. Create a directory named zzz and start\na Web server in it from your command prompt:\n\n    $ mkdir zzz && cd zzz && python -mSimpleHTTPServer\n\nCreate a file named a.css there and make sure it uses css-mode (like\nwith js2-mode, you can force it with M-x css-mode). Add some CSS rules\nto this file:\n\n    body {\n        background: green;\n    }\n\nNow let\'s add the stylesheet to the reddit page:\n\n    FIREFOX-3.6> $(\'head\').append(\'<link rel="stylesheet" href="http://localhost:8000/a.css" type="text/css" />\');\n    [object Object]\n\nYou will see some parts of the page become green. Now, change green to\nblue in the CSS file and press C-M-x (it will save the file\nautomatically):\n\n    body {\n        background: blue;\n    }\n\nYou will see the page become blue, maybe after some flickering as all\nCSS used on the page is reloaded. This way you may update CSS in an\nAJAX application without reloading the page, which is often rather\nhandy. Unlike editing CSS in Firebug in case when you\'re editing CSS\nof your own application changes will not disappear upon page reload\n(with reddit page you\'ll have to readd the stylesheet).\n\n\n#### By embedding CSS ####\n\nAlternatively to just try out a snippet of CSS you can select some CSS code and hit `C-c C-r`. This will send the code snippet (or the content of the whole buffer) to the browser and embed it inside a style element.\n\nTo remove the embedded CSS run the command with a prefix `C-u C-c C-r`.\n\n\n### Embedding swank-js in a page ###\n\nThis is useful for automatically connecting to a web page you develop\nlocally without using the *,target-url* command and without changing\nthe document URL for that page. When `node swank.js` is running embed\n\n    <script type="text/javascript" src="http://localhost:8009/swank-js/swank-js-inject.js"></script>\n\nand you are ready to go!\n\n### swank-js as a bookmarklet ###\n\nYou can bookmark\n<a href="javascript:(function(d)%7Bwindow.swank_server%3D%27http%3A%2F%2Flocalhost%3A8009%2F%27%3Bif(!d.getElementById(%27swank-js-inj%27))%7Bvar%20h%3Dd.getElementsByTagName(%27head%27)%5B0%5D%2Cs%3Dd.createElement(%27script%27)%3Bs.id%3D%27swank-js-inj%27%3Bs.type%3D%27text%2Fjavascript%27%3Bs.src%3Dswank_server%2B%27swank-js%2Fswank-js-inject.js%27%3Bh.appendChild(s)%3B%7D%7D)(document)%3B">\nswank connect</a> /\n<a\nhref="javascript:(function()%7BSwankJS.disconnect()%3B%7D)()%3B">swank\ndisconnect</a>\nlinks and use them on any page you\'d like to play with.\n\n### swank-js from another node.js process ###\n\nWhen installed globally (`npm install -g swank-js`) you can connect another node.js process to the swank-js node process via\n\n```js\nrequire("swank-js/client/node").setupNodeJSClient();\n```\n\nOptionally you can pass in *swank_server_host* and *swank_server_port* as arguments to the `setupNodeJSClient` call.\n\nTroubleshooting\n---------------\n\nI\'ve noticed that flashsocket Socket.IO transport does exhibit some\ninstability. You may want to try other transports by changing the\nsocketio cookie, e.g.:\n\n    document.cookie = "socketio=xhr-polling"\n\nBe careful not to lose connection to the browser though especially in\ncase of REPL-less browser like IE6/7 or you\'ll have to type something\nlike\n\n    javascript:void(document.cookie = "socketio=flashsocket")\n\nin the address bar.\n\nIn case of IE, increasing the maximum number of HTTP connections may\nhelp with non-Flash transports, although I didn\'t try it yet. To do it\nadd DWORD value MaxConnectionsPer1_0Server to the following registry\nkey:\n\n    HKEY\\_CURRENT\\_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\n\nLicense\n-------\n\nswank-js is distributed under X11-style license. See LICENSE file.\n',
120 silly resolved     readmeFilename: 'README.md',
120 silly resolved     _id: 'swank-js@0.0.5',
120 silly resolved     dist: { shasum: '21071d1771aba23becdea5bca8d7d2b65168b458' },
120 silly resolved     _from: 'swank-js' } ]
121 info install swank-js@0.0.5 into /usr/local/lib
122 info installOne swank-js@0.0.5
123 verbose from cache /home/gabe/.npm/swank-js/0.0.5/package/package.json
124 info /usr/local/lib/node_modules/swank-js unbuild
125 verbose read json /usr/local/lib/node_modules/swank-js/package.json
126 info preuninstall swank-js@0.0.5
127 info uninstall swank-js@0.0.5
128 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild swank-js@0.0.5
129 verbose /usr/local/bin,[object Object] binRoot
130 info postuninstall swank-js@0.0.5
131 info /usr/local/lib/node_modules/swank-js unbuild
132 verbose read json /usr/local/lib/node_modules/swank-js/package.json
133 info preuninstall swank-js@0.0.5
134 info uninstall swank-js@0.0.5
135 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild swank-js@0.0.5
136 verbose /usr/local/bin,[object Object] binRoot
137 info postuninstall swank-js@0.0.5
138 error error rolling back Error: EPERM, chmod '/usr/local/lib/node_modules/swank-js'
138 error error rolling back  swank-js@0.0.5 { [Error: EPERM, chmod '/usr/local/lib/node_modules/swank-js']
138 error error rolling back   errno: 50,
138 error error rolling back   code: 'EPERM',
138 error error rolling back   path: '/usr/local/lib/node_modules/swank-js' }
139 error Error: EPERM, chmod '/usr/local/lib/node_modules/swank-js'
139 error  { [Error: EPERM, chmod '/usr/local/lib/node_modules/swank-js']
139 error   errno: 50,
139 error   code: 'EPERM',
139 error   path: '/usr/local/lib/node_modules/swank-js' }
140 error Please try running this command again as root/Administrator.
141 error System Linux 3.11.0-12-generic
142 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "swank-js"
143 error cwd /home/gabe/.emacs.d
144 error node -v v0.10.15
145 error npm -v 1.2.18
146 error path /usr/local/lib/node_modules/swank-js
147 error code EPERM
148 error errno 50
149 error stack Error: EPERM, chmod '/usr/local/lib/node_modules/swank-js'
150 verbose exit [ 50, true ]
